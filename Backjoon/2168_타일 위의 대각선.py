# 수학
# 정수론
# 유클리드 호제법


# 문제: https://www.acmicpc.net/problem/2168
# 메모리: 32412KB / 시간: 36ms

"""
식 유도 과정은 두가지임.
우선 x, y 크기의 직사각형에서 대각선을 그으면,
- 가로 선을 지나치거나
- 세로 선을 지나치거나
둘 중 하나임. 한칸씩 이동한다고 치면, x y 크기에서 가로선은 x-1개, 세로선은 y-1개 지나치게 됨.
그리고 시작타일은 이 경우에 포함되지 않으므로 따로 +1 처리를 해줘야 함.
따라서 대각선이 그어지는 타일 갯수는 기본적으로 (x-1) + (y-1) + 1 개다.

하지만, 정확히 꼭짓점으로 지나치는 구간이 있음.
x y 두 수가 같은 수로 나누어 떨어질때임.
예를들어 x y = 4 6 이면, 대각선은 2 3 일때 꼭짓점을 지나치게 됨.
즉, 최대공약수 gcd를 구해야 함. (x/g, y/g)패턴이 g만큼 반복하는 셈임.

이걸 좀 다르게 생각하면, 패턴이 g만큼 반복한다는건 결국 격자점을 정확히 지나는 경우가 g-1만큼 있다는거임.
따라서...

식 1
(x-1) + (y-1) + 1 = x + y - 1
따라서 가로, 세로 길이가 x/g, y/g인 직사각형 위의 대각선은 x/g + y-g - 1개의 정사각형을 지난다.

우리가 구하려는건 x, y 크기의 직사각형이니, 이걸 gcd 만큼 반복하면...
g * (x/g + y/g - 1) = x + y - g 가 된다.

식 2
x + y - 1 까지는 같음.
여기서 살짝 틀면, g개의 패턴이 있다는 것 = 격자점을 g-1개 지남.
즉, 전체 대각선 타일에서 격자점 갯수만큼을 빼준다.
x + y - 1 - (g - 1) = x + y - 1 - g + 1 = x + y - g

🗝️ 결론적으로 최종 식은 x + y - gcd(x, y) 다.
"""
from sys import stdin


input = stdin.readline

def main():
    x, y = map(int, input().split())
    
    def gcd(a, b):
        while b:
            a, b = b, a % b
        return a
    

    print(x + y - gcd(x, y))


main()